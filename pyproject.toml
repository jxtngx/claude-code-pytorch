[project]
name = "pytorch-ml-template"
version = "0.1.0"
description = "PyTorch and HuggingFace ML template with Claude Code support"
authors = [{name = "jxtngx", email = ""}]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.9"
urls = {Repository = "https://github.com/jxtngx/claude-code-pytorch"}
dependencies = [
    "torch>=2.3.0",
    "torchvision>=0.18.0",
    "transformers>=4.40.0",
    "datasets>=2.19.0",
    "accelerate>=0.30.0",
    "pillow>=10.0.0",
    "numpy>=1.24.0",
    "tqdm>=4.66.0",
    "boto3>=1.34.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.5.0",
    "black>=24.0.0",
    "mypy>=1.10.0",
    "pre-commit>=3.7.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
]

[tool.ruff]
line-length = 120
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip() without explicit strict= parameter
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | __pycache__
  | \.venv
  | venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
ignore_missing_imports = true
exclude = [
    ".venv",
    "venv",
    "build",
    "dist",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = [
    "-v",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"